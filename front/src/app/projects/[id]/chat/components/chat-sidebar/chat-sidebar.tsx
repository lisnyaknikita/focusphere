'use client'

import clsx from 'clsx'
import Image from 'next/image'
import { useState } from 'react'
import classes from './chat-sidebar.module.scss'

const CHANNELS = ['general', 'home-page', 'notes-page']
const TEAMMATES = ['sarahwatts', 'tombards']

export const ChatSidebar = () => {
	const [isChannelsHovered, setIsChannelsHovered] = useState(false)
	const [isMessagesHovered, setIsMessagesHovered] = useState(false)
	const [isChannelsOpened, setIsChannelsOpened] = useState(true)
	const [isMessagesOpened, setIsMessagesOpened] = useState(true)

	return (
		<div className={classes.sidebar}>
			<h3 className={classes.title}>Website redesign</h3>
			<div className={classes.channels}>
				<div
					className={classes.trigger}
					onMouseEnter={() => setIsChannelsHovered(true)}
					onMouseLeave={() => setIsChannelsHovered(false)}
					onClick={() => setIsChannelsOpened(prev => !prev)}
				>
					<button className={classes.triggerTitle}>
						<svg
							className={clsx(!isChannelsOpened && 'rotated')}
							width='11'
							height='6'
							viewBox='0 0 11 6'
							fill='none'
							xmlns='http://www.w3.org/2000/svg'
						>
							<path
								d='M10.7715 0.247421C10.6985 0.169022 10.6116 0.106794 10.5159 0.0643287C10.4201 0.0218632 10.3175 0 10.2138 0C10.11 0 10.0074 0.0218632 9.91162 0.0643287C9.81588 0.106794 9.72899 0.169022 9.65596 0.247421L6.05779 4.07837C5.98476 4.15677 5.89787 4.219 5.80213 4.26146C5.7064 4.30393 5.60371 4.32579 5.5 4.32579C5.39629 4.32579 5.2936 4.30393 5.19787 4.26146C5.10213 4.219 5.01524 4.15677 4.94221 4.07837L1.34404 0.247421C1.27101 0.169022 1.18412 0.106794 1.08838 0.0643287C0.992645 0.0218632 0.88996 0 0.786248 0C0.682536 0 0.57985 0.0218632 0.484115 0.0643287C0.388379 0.106794 0.301488 0.169022 0.228454 0.247421C0.0821305 0.404141 0 0.616141 0 0.837119C0 1.0581 0.0821305 1.2701 0.228454 1.42682L3.83447 5.26613C4.27639 5.73605 4.87543 6 5.5 6C6.12457 6 6.72361 5.73605 7.16553 5.26613L10.7715 1.42682C10.9179 1.2701 11 1.0581 11 0.837119C11 0.616141 10.9179 0.404141 10.7715 0.247421Z'
								fill='var(--text)'
							/>
						</svg>
						<span>Channels</span>
					</button>
					<button className={clsx(classes.createButton, isChannelsHovered && 'onhover')}>
						<svg width='10' height='10' viewBox='0 0 12 12' fill='none' xmlns='http://www.w3.org/2000/svg'>
							<path
								d='M11 5H7V1C7 0.734784 6.89464 0.48043 6.70711 0.292893C6.51957 0.105357 6.26522 0 6 0C5.73478 0 5.48043 0.105357 5.29289 0.292893C5.10536 0.48043 5 0.734784 5 1V5H1C0.734784 5 0.48043 5.10536 0.292893 5.29289C0.105357 5.48043 0 5.73478 0 6C0 6.26522 0.105357 6.51957 0.292893 6.70711C0.48043 6.89464 0.734784 7 1 7H5V11C5 11.2652 5.10536 11.5196 5.29289 11.7071C5.48043 11.8946 5.73478 12 6 12C6.26522 12 6.51957 11.8946 6.70711 11.7071C6.89464 11.5196 7 11.2652 7 11V7H11C11.2652 7 11.5196 6.89464 11.7071 6.70711C11.8946 6.51957 12 6.26522 12 6C12 5.73478 11.8946 5.48043 11.7071 5.29289C11.5196 5.10536 11.2652 5 11 5Z'
								fill='var(--text)'
							/>
						</svg>
					</button>
				</div>
				<ul className={clsx(classes.list, isChannelsOpened && 'opened')}>
					{CHANNELS.map(channel => (
						<li className={classes.listItem} key={channel}>
							<svg width='10' height='10' viewBox='0 0 12 11' fill='none' xmlns='http://www.w3.org/2000/svg'>
								<path
									d='M10.7487 4.20314C10.2362 4.20314 9.79728 4.52369 9.6043 4.98118H7.92851C7.84052 4.63002 7.67104 4.31414 7.43507 4.06101L8.30846 2.58066C8.7854 2.64861 9.27784 2.42764 9.54531 1.9743C9.90576 1.3638 9.72079 0.565528 9.13186 0.19103C8.54343 -0.182949 7.77403 0.00896817 7.41307 0.619991C7.14561 1.07333 7.1796 1.62885 7.45507 2.03862L6.57818 3.52416C6.3937 3.46555 6.20172 3.42509 5.99875 3.42509C5.79578 3.42509 5.6038 3.46607 5.41882 3.52468L4.54193 2.03914C4.8174 1.62937 4.85139 1.07333 4.58393 0.619991C4.22347 0.00948683 3.45407 -0.182949 2.86514 0.19103C2.27672 0.565009 2.09124 1.36328 2.45169 1.9743C2.71916 2.42764 3.2116 2.64861 3.68854 2.58066L4.56193 4.06101C4.32646 4.31414 4.15648 4.63002 4.06899 4.98066H2.3927C2.19972 4.52317 1.76078 4.20262 1.24834 4.20262C0.55943 4.20314 0 4.78356 0 5.49987C0 6.21619 0.55943 6.79661 1.24984 6.79661C1.76178 6.79661 2.20122 6.47606 2.3942 6.01857H4.07099C4.15898 6.36921 4.32846 6.68561 4.56393 6.93873L3.69054 8.41909C3.2136 8.35114 2.72116 8.57211 2.45369 9.02544C2.09324 9.63595 2.27822 10.4347 2.86714 10.8087C3.45557 11.1827 4.22547 10.9908 4.58593 10.3803C4.85339 9.92694 4.8194 9.3709 4.54393 8.96113L5.42032 7.4761C5.6053 7.53471 5.79728 7.57569 6.00025 7.57569C6.20322 7.57569 6.3952 7.53471 6.57968 7.4761L7.45607 8.96113C7.1806 9.3709 7.14661 9.92694 7.41407 10.3803C7.77453 10.9908 8.54393 11.1832 9.13286 10.8087C9.72178 10.4347 9.90676 9.63647 9.54631 9.02544C9.27884 8.57211 8.7859 8.35114 8.30946 8.41909L7.43607 6.93925C7.67204 6.68613 7.84152 6.36973 7.92951 6.01909H9.6058C9.79878 6.47658 10.2377 6.79713 10.7502 6.79713C11.4406 6.79713 12 6.21671 12 5.50039C12 4.78407 11.4406 4.20366 10.7502 4.20366L10.7487 4.20314ZM4.99937 5.49987C4.99937 4.92775 5.44782 4.46248 5.99925 4.46248C6.55068 4.46248 6.99913 4.92775 6.99913 5.49987C6.99913 6.07199 6.55068 6.53726 5.99925 6.53726C5.44782 6.53726 4.99937 6.07199 4.99937 5.49987Z'
									fill='var(--text)'
								/>
							</svg>
							<span>{channel}</span>
						</li>
					))}
				</ul>
			</div>
			<div className={classes.messages}>
				<div
					className={classes.trigger}
					onMouseEnter={() => setIsMessagesHovered(true)}
					onMouseLeave={() => setIsMessagesHovered(false)}
					onClick={() => setIsMessagesOpened(prev => !prev)}
				>
					<button className={classes.triggerTitle}>
						<svg
							className={clsx(!isMessagesOpened && 'rotated')}
							width='11'
							height='6'
							viewBox='0 0 11 6'
							fill='none'
							xmlns='http://www.w3.org/2000/svg'
						>
							<path
								d='M10.7715 0.247421C10.6985 0.169022 10.6116 0.106794 10.5159 0.0643287C10.4201 0.0218632 10.3175 0 10.2138 0C10.11 0 10.0074 0.0218632 9.91162 0.0643287C9.81588 0.106794 9.72899 0.169022 9.65596 0.247421L6.05779 4.07837C5.98476 4.15677 5.89787 4.219 5.80213 4.26146C5.7064 4.30393 5.60371 4.32579 5.5 4.32579C5.39629 4.32579 5.2936 4.30393 5.19787 4.26146C5.10213 4.219 5.01524 4.15677 4.94221 4.07837L1.34404 0.247421C1.27101 0.169022 1.18412 0.106794 1.08838 0.0643287C0.992645 0.0218632 0.88996 0 0.786248 0C0.682536 0 0.57985 0.0218632 0.484115 0.0643287C0.388379 0.106794 0.301488 0.169022 0.228454 0.247421C0.0821305 0.404141 0 0.616141 0 0.837119C0 1.0581 0.0821305 1.2701 0.228454 1.42682L3.83447 5.26613C4.27639 5.73605 4.87543 6 5.5 6C6.12457 6 6.72361 5.73605 7.16553 5.26613L10.7715 1.42682C10.9179 1.2701 11 1.0581 11 0.837119C11 0.616141 10.9179 0.404141 10.7715 0.247421Z'
								fill='var(--text)'
							/>
						</svg>
						<span>Direct messages</span>
					</button>
					<button className={clsx(classes.createButton, isMessagesHovered && 'onhover')}>
						<svg width='10' height='10' viewBox='0 0 12 12' fill='none' xmlns='http://www.w3.org/2000/svg'>
							<path
								d='M11 5H7V1C7 0.734784 6.89464 0.48043 6.70711 0.292893C6.51957 0.105357 6.26522 0 6 0C5.73478 0 5.48043 0.105357 5.29289 0.292893C5.10536 0.48043 5 0.734784 5 1V5H1C0.734784 5 0.48043 5.10536 0.292893 5.29289C0.105357 5.48043 0 5.73478 0 6C0 6.26522 0.105357 6.51957 0.292893 6.70711C0.48043 6.89464 0.734784 7 1 7H5V11C5 11.2652 5.10536 11.5196 5.29289 11.7071C5.48043 11.8946 5.73478 12 6 12C6.26522 12 6.51957 11.8946 6.70711 11.7071C6.89464 11.5196 7 11.2652 7 11V7H11C11.2652 7 11.5196 6.89464 11.7071 6.70711C11.8946 6.51957 12 6.26522 12 6C12 5.73478 11.8946 5.48043 11.7071 5.29289C11.5196 5.10536 11.2652 5 11 5Z'
								fill='var(--text)'
							/>
						</svg>
					</button>
				</div>
				<ul className={clsx(classes.list, isMessagesOpened && 'opened')}>
					{TEAMMATES.map(mate => (
						<li className={classes.listItem} key={mate}>
							<Image src={'/avatar.png'} alt='avatar' width={20} height={19} />
							<span>{mate}</span>
						</li>
					))}
				</ul>
			</div>
		</div>
	)
}
